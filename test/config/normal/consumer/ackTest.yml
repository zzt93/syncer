version: 1.3

consumerId: ackTest


input:
  - connection:
      clusterNodes: [${MYSQL_ADDR}]
    repos:
      - name: "test_.*"
        entities:
          - name: correctness
            fields: [time, news_id, currency, total, quantity, type, name, unit] # default id is not null, other can be null
          - name: types
            fields: [tinyint, bigint, char, varchar, text, decimal, double, timestamp]
          - name: news
            fields: [title, content, thumb_content, tags, affair_id, modify_time, plate_type, state, alliance_id, number, plate_sub_type]
      - name: "simple.*"
        entities:
          - name: simple_type
            fields: [tinyint, bigint, char, varchar, text, decimal, double, timestamp]
      - name: "discard.*"
        entities:
          - name: toDiscard
            fields: [time, news_id, currency, total, quantity, type, name, unit] # default id is not null, other can be null
      - name: "copy.*"
        entities:
          - name: toCopy
            fields: [title, content, thumb_content, tags, affair_id, modify_time, plate_type, state, alliance_id, number, plate_sub_type]



filter:
  sourcePath: /data/config/consumer/AckTest.java

output:
  elasticsearch:
    connection:
      clusterName: ${ES_CLUSTER}
      clusterNodes: ["${ES_ADDR}:9300"]
    requestMapping: # mapping from input data to es request
      retryOnUpdateConflict: 3
    batch:
      size: 100
      delay: 1000
      maxRetry: 5
    refreshInMillis: 0
    failureLog:
      countLimit: 1000
  mysql:
    connection:
      address: ${MYSQL_OUT}
      port: 3306
      user: root
      password: ${MYSQL_OUT_PASS}
    batch:
      size: 100
      delay: 100
      maxRetry: 5
    failureLog:
      countLimit: 1000
